lapply(names(regflows),function(d){rep(ymd(d),nrow(regflows[[1]]))})
ggplot(data.frame(
totalflow = unlist(lapply(regflows,function(d){d$flow})),
region =  unlist(lapply(regflows,function(d){d$region})),
day = unlist(lapply(names(regflows),function(d){rep(ymd(d),nrow(regflows[[1]]))}))
),
aes(x=day,y=totalflow,color=region,group=region)
)+geom_point()+geom_line()+xlab('Day')+ylab('Total flow')+stdtheme
ggsave(file=paste0(resdir,'allflows_regions.png'),width=25,height=20,units='cm')
alldays = list()
for(currentday in days){
spraw$currentflow = spraw[[paste0('X',currentday,'_0000')]] + spraw[[paste0('X',currentday,'_0800')]] + spraw[[paste0('X',currentday,'_1600')]]
g = graph_from_data_frame(spraw[,c("oid","did","currentflow")])
E(g)$weight = E(g)$currentflow
E(g)$region = ifelse(spraw$oregion==spraw$dregion,spraw$oregion,'A-Interregion')
E(g)$region[is.na(E(g)$region)]='Z-International'
alldays[[currentday]]=g
}
regflows = lapply(alldays,function(g){
as.tbl(data.frame(flow = E(g)$weight, region=as.character(E(g)$region)))%>% group_by(region)%>%summarize(flow=sum(flow))
})
ggplot(data.frame(
totalflow = unlist(lapply(regflows,function(d){d$flow})),
region =  unlist(lapply(regflows,function(d){d$region})),
day = unlist(lapply(names(regflows),function(d){rep(ymd(d),nrow(regflows[[1]]))}))
),
aes(x=day,y=totalflow,color=region,group=region)
)+geom_point()+geom_line()+xlab('Day')+ylab('Total flow')+stdtheme
ggsave(file=paste0(resdir,'allflows_regions.png'),width=25,height=20,units='cm')
length(which(is.na(spraw$oregion)))
length(which(is.na(spraw$dregion)))
plot(opoints$geometry)
spraw = spraw[!is.na(spraw$oregion)&!is.na(spraw$dregion),]
spraw$initflow = spraw$X20200304_0000 + spraw$X20200304_0800 + spraw$X20200304_1600
spraw$finalflow = spraw$X20200316_0000 + spraw$X20200316_0800 + spraw$X20200316_1600
ginit = graph_from_data_frame(spraw[,c("oid","did","initflow")])
E(ginit)$weight = E(ginit)$initflow
gfinal = graph_from_data_frame(spraw[,c("oid","did","finalflow")])
E(gfinal)$weight = E(gfinal)$finalflow
alldays = list()
for(currentday in days){
spraw$currentflow = spraw[[paste0('X',currentday,'_0000')]] + spraw[[paste0('X',currentday,'_0800')]] + spraw[[paste0('X',currentday,'_1600')]]
g = graph_from_data_frame(spraw[,c("oid","did","currentflow")])
E(g)$weight = E(g)$currentflow
E(g)$region = ifelse(spraw$oregion==spraw$dregion,spraw$oregion,'A-Interregion')
E(g)$region[is.na(E(g)$region)]='Z-International'
alldays[[currentday]]=g
}
ggplot(data.frame(
totalflow = sapply(alldays,function(g){sum(E(g)$weight)}),
day = ymd(days)
),
aes(x=day,y=totalflow)
)+geom_point()+geom_line()+xlab('Day')+ylab('Total flow')+stdtheme
ggsave(file=paste0(resdir,'allflows.png'),width=15,height=10,units='cm')
regflows = lapply(alldays,function(g){
as.tbl(data.frame(flow = E(g)$weight, region=as.character(E(g)$region)))%>% group_by(region)%>%summarize(flow=sum(flow))
})
ggplot(data.frame(
totalflow = unlist(lapply(regflows,function(d){d$flow})),
region =  unlist(lapply(regflows,function(d){d$region})),
day = unlist(lapply(names(regflows),function(d){rep(ymd(d),nrow(regflows[[1]]))}))
),
aes(x=day,y=totalflow,color=region,group=region)
)+geom_point()+geom_line()+xlab('Day')+ylab('Total flow')+stdtheme
ggsave(file=paste0(resdir,'allflows_regions.png'),width=25,height=20,units='cm')
alldays = list()
for(currentday in days){
spraw$currentflow = spraw[[paste0('X',currentday,'_0000')]] + spraw[[paste0('X',currentday,'_0800')]] + spraw[[paste0('X',currentday,'_1600')]]
g = graph_from_data_frame(spraw[,c("oid","did","currentflow")])
E(g)$weight = E(g)$currentflow
E(g)$region = ifelse(spraw$oregion==spraw$dregion,spraw$oregion,'Interregion')
#E(g)$region[is.na(E(g)$region)]='Z-International'
alldays[[currentday]]=g
}
sum(E(ginit)$weight)
sum(E(gfinal)$weight)
regflows = lapply(alldays,function(g){
as.tbl(data.frame(flow = E(g)$weight, region=as.character(E(g)$region)))%>% group_by(region)%>%summarize(flow=sum(flow))
})
ggplot(data.frame(
totalflow = unlist(lapply(regflows,function(d){d$flow})),
region =  unlist(lapply(regflows,function(d){d$region})),
day = unlist(lapply(names(regflows),function(d){rep(ymd(d),nrow(regflows[[1]]))}))
),
aes(x=day,y=totalflow,color=region,group=region)
)+geom_point()+geom_line()+xlab('Day')+ylab('Total flow')+stdtheme
ggsave(file=paste0(resdir,'allflows_regions.png'),width=25,height=20,units='cm')
ggsave(file=paste0(resdir,'allflows_regions.png'),width=35,height=20,units='cm')
ggplot(data.frame(strength = strength(ginit)),aes(x=strength))+geom_histogram()+scale_x_log10()+xlab('Weighted degree')+ylab('Count')+stdtheme
ggsave(filename = paste0(resdir,'strength_initnw.png'),width=15,height=10,units='cm')
ggplot(data.frame(strength = strength(gfinal)),aes(x=strength))+geom_histogram()+scale_x_log10()+xlab('Weighted degree')+ylab('Count')+stdtheme
ggsave(filename = paste0(resdir,'strength_finalnw.png'),width=15,height=10,units='cm')
sum(spraw$distance*spraw$initflow/sum(spraw$initflow))
sum(spraw$distance*spraw$finalflow/sum(spraw$finalflow))
alldays = list()
for(currentday in days){
spraw$currentflow = spraw[[paste0('X',currentday,'_0000')]] + spraw[[paste0('X',currentday,'_0800')]] + spraw[[paste0('X',currentday,'_1600')]]
g = graph_from_data_frame(spraw[,c("oid","did","currentflow","distance")])
E(g)$weight = E(g)$currentflow
E(g)$region = ifelse(spraw$oregion==spraw$dregion,spraw$oregion,'Interregion')
#E(g)$region[is.na(E(g)$region)]='Z-International'
alldays[[currentday]]=g
}
ggplot(data.frame(avgdist = sapply(alldays,function(g){sum(E(g)$distance*E(g)$weight/sum(E(g)$weight))}),day = ymd(days)),
aes(x=day,y=totalflow))+geom_point()+geom_line()+xlab('Day')+ylab('Average travelled distance')+stdtheme
ggplot(data.frame(avgdist = sapply(alldays,function(g){sum(E(g)$distance*E(g)$weight/sum(E(g)$weight))}),day = ymd(days)),
aes(x=day,y=avgdist))+geom_point()+geom_line()+xlab('Day')+ylab('Average travelled distance')+stdtheme
ggsave(file=paste0(resdir,'avgdist.png'),width=15,height=10,units='cm')
unlist(lapply(names(regflows),function(d){rep(ymd(d),nrow(regflows[[1]]))}))
lapply(names(regflows),function(d){rep(ymd(d),nrow(regflows[[1]]))})
unlist(lapply(names(regflows),function(d){rep(d,nrow(regflows[[1]]))}))
sapply(unlist(lapply(names(regflows),function(d){rep(d,nrow(regflows[[1]]))})),ymd)
tapply(unlist(lapply(names(regflows),function(d){rep(d,nrow(regflows[[1]]))})),ymd)
lapply(unlist(lapply(names(regflows),function(d){rep(d,nrow(regflows[[1]]))})),ymd)
ggplot(data.frame(
totalflow = unlist(lapply(regflows,function(d){d$flow})),
region =  unlist(lapply(regflows,function(d){d$region})),
day = lapply(unlist(lapply(names(regflows),function(d){rep(d,nrow(regflows[[1]]))})),ymd)
),
aes(x=day,y=totalflow,color=region,group=region)
)+geom_point()+geom_line()+xlab('Day')+ylab('Total flow')+stdtheme
ggplot(data.frame(
totalflow = unlist(lapply(regflows,function(d){d$flow})),
region =  unlist(lapply(regflows,function(d){d$region})),
day = ymd(unlist(lapply(names(regflows),function(d){rep(d,nrow(regflows[[1]]))})))
),
aes(x=day,y=totalflow,color=region,group=region)
)+geom_point()+geom_line()+xlab('Day')+ylab('Total flow')+stdtheme
ggsave(file=paste0(resdir,'allflows_regions.png'),width=35,height=20,units='cm')
ggsave(file=paste0(resdir,'avgdist.png'),width=20,height=15,units='cm')
ggplot(data.frame(avgdist = sapply(alldays,function(g){sum(E(g)$distance*E(g)$weight/sum(E(g)$weight))}),day = ymd(days)),
aes(x=day,y=avgdist))+geom_point()+geom_line()+xlab('Day')+ylab('Average travelled distance')+stdtheme
ggsave(file=paste0(resdir,'avgdist.png'),width=20,height=15,units='cm')
regflows = lapply(alldays,function(g){
as.tbl(data.frame(flow = E(g)$weight,
region=as.character(E(g)$region),
distance=E(g)$distance
))%>%
group_by(region)%>%summarize(flow=sum(flow),avgdist=sum(flow*distance)/sum(flow))
})
regflows
ggplot(data.frame(
avgdist = unlist(lapply(regflows,function(d){d$avgdist})),
region =  unlist(lapply(regflows,function(d){d$region})),
day = ymd(unlist(lapply(names(regflows),function(d){rep(d,nrow(regflows[[1]]))})))
),
aes(x=day,y=totalflow,color=region,group=region)
)+geom_point()+geom_line()+xlab('Day')+ylab('Average travelled distance')+stdtheme
ggplot(data.frame(
avgdist = unlist(lapply(regflows,function(d){d$avgdist})),
region =  unlist(lapply(regflows,function(d){d$region})),
day = ymd(unlist(lapply(names(regflows),function(d){rep(d,nrow(regflows[[1]]))})))
),
aes(x=day,y=avgdist,color=region,group=region)
)+geom_point()+geom_line()+xlab('Day')+ylab('Average travelled distance')+stdtheme
ggsave(file=paste0(resdir,'avgdist_regions.png'),width=35,height=20,units='cm')
regflows = lapply(alldays,function(g){
as.tbl(data.frame(flow = E(g)$weight,
region=as.character(E(g)$region),
distance=E(g)$distance
))%>%
group_by(region)%>%summarize(avgdist=sum(flow*distance)/sum(flow),flow=sum(flow))
})
ggplot(data.frame(
avgdist = unlist(lapply(regflows,function(d){d$avgdist})),
region =  unlist(lapply(regflows,function(d){d$region})),
day = ymd(unlist(lapply(names(regflows),function(d){rep(d,nrow(regflows[[1]]))})))
),
aes(x=day,y=avgdist,color=region,group=region)
)+geom_point()+geom_line()+xlab('Day')+ylab('Average travelled distance')+stdtheme
ggsave(file=paste0(resdir,'avgdist_regions.png'),width=35,height=20,units='cm')
ddist = data.frame(
avgdist = unlist(lapply(regflows,function(d){d$avgdist})),
region =  unlist(lapply(regflows,function(d){d$region})),
day = ymd(unlist(lapply(names(regflows),function(d){rep(d,nrow(regflows[[1]]))})))
)
ggplot(ddist,aes(x=day,y=avgdist,color=region,group=region))+geom_point()+geom_line()+xlab('Day')+ylab('Average travelled distance')+stdtheme
ggsave(file=paste0(resdir,'avgdist_regions.png'),width=35,height=20,units='cm')
ggplot(ddist[ddist$region!='Interregion',],aes(x=day,y=avgdist,color=region,group=region))+geom_point()+geom_line()+xlab('Day')+ylab('Average travelled distance')+stdtheme
ggsave(file=paste0(resdir,'avgdist_regions.png'),width=35,height=20,units='cm')
ggplot(ddist,aes(x=day,y=avgdist,color=region,group=region))+geom_point()+geom_line()+xlab('Day')+ylab('Average travelled distance')+stdtheme
ggsave(file=paste0(resdir,'avgdist_regions.png'),width=35,height=20,units='cm')
ggplot(ddist[ddist$region!='Interregion',],aes(x=day,y=avgdist,color=region,group=region))+geom_point()+geom_line()+xlab('Day')+ylab('Average travelled distance')+stdtheme
ggsave(file=paste0(resdir,'avgdist_regions_without_inter.png'),width=35,height=20,units='cm')
setwd(paste0(Sys.getenv('CS_HOME'),'/QuantEpistemo/Models/UKMigration'))
library(lubridate)
progress <- read.csv('progress.txt',sep=";",header = F)
progress
names(progress)<- c('ts','nodes','links','remaining')
setwd(paste0(Sys.getenv('CS_HOME'),'/MobilityEpidemio/Models/'))
dir.create('DataConsolidation')
global <- as.tbl(read.csv(
url('https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv')
))
global
france <- as.tbl(read.csv('../Data/France/donnees-hospitalieres-covid19-2020-04-21-19h00.csv'))
italy <- as.tbl(read.csv(url('https://github.com/pcm-dpc/COVID-19/raw/master/dati-regioni/dpc-covid19-ita-regioni-latest.csv')))
italy
us <- as.tbl(read.csv(url('https://github.com/CSSEGISandData/COVID-19/raw/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv')))
x = strength(g)
x = x[x>0]
lm(data = data.frame(rank=log(1:length(x)),strength = sort(log(x),decreasing = T)))
lm(data = data.frame(rank=log(1:length(x)),strength = sort(log(x),decreasing = T)))$coefficients
lm(data = data.frame(rank=log(1:length(x)),strength = sort(log(x),decreasing = T)))$coefficients[2]
strengthHierarchy <- function(g){
x = strength(g)
x = x[x>0]
return(lm(data = data.frame(rank=log(1:length(x)),strength = sort(log(x),decreasing = T)))$coefficients[2])
}
ggplot(data.frame(hierarchy = sapply(alldays,strengthHierarchy),day = ymd(days)),aes(x=day,y=hierarchy))+
geom_point()+geom_line()+xlab('Day')+ylab('Strength hierarchy')+stdtheme
ggsave(file=paste0(resdir,'strengthhierarchy.png'),width=15,height=10,units='cm')
help("cluster_fast_greedy")
cluster_fast_greedy(g)
A = as_adjacency_matrix(g)
M = (A+t(A))/2
gundir= graph_from_adjacency_matrix(M,mode = "undirected")
help("modularity")
clusters = cluster_fast_greedy(gundir) #clusterFunction(gundir)
clusters$modularity
summary(clusters)
modularity(gundir, clusters)
modularity(gundir, clusters$membership)
clusterModularity <- function(g,clusterFunction){
A = as_adjacency_matrix(g)
M = (A+t(A))/2
gundir= graph_from_adjacency_matrix(M,mode = "undirected")
clusters =clusterFunction(gundir)
return(modularity(gundir, clusters$membership))
}
ggplot(data.frame(modularity = sapply(alldays,function(g){clusterModularity(g,cluster_fast_greedy)}),day = ymd(days)),aes(x=day,y=modularity))+
geom_point()+geom_line()+xlab('Day')+ylab('Modularity')+stdtheme
clusterModularity(ginit,cluster_fast_greedy)
clusterModularity(gfinal,cluster_fast_greedy)
A = as_adjacency_matrix(ginit)
A
help("as_adjacency_matrix")
A = as_adjacency_matrix(ginit,attr = "weight")
A
clusterModularity <- function(g,clusterFunction){
A = as_adjacency_matrix(g,attr = "weight")
M = (A+t(A))/2
gundir= graph_from_adjacency_matrix(M,mode = "undirected")
clusters =clusterFunction(gundir)
return(modularity(gundir, clusters$membership))
}
clusterModularity(ginit,cluster_fast_greedy)
clusterModularity(gfinal,cluster_fast_greedy)
clusterModularity <- function(g,clusterFunction){
A = as_adjacency_matrix(g,attr = "weight")
M = (A+t(A))/2
gundir= graph_from_adjacency_matrix(M,mode = "undirected",weighted = "weight")
clusters =clusterFunction(gundir)
return(modularity(gundir, clusters$membership))
}
clusterModularity(ginit,cluster_fast_greedy)
clusterModularity(gfinal,cluster_fast_greedy)
ggplot(data.frame(modularity = sapply(alldays,function(g){clusterModularity(g,cluster_fast_greedy)}),day = ymd(days)),aes(x=day,y=modularity))+
geom_point()+geom_line()+xlab('Day')+ylab('Modularity')+stdtheme
ggsave(file=paste0(resdir,'modularity.png'),width=15,height=10,units='cm')
help("modularity")
help("assortativity")
modularity(ginit, rep(1,length(V(ginit))))
gundir
A = as_adjacency_matrix(g,attr = "weight")
M = (A+t(A))/2
gundir= graph_from_adjacency_matrix(M,mode = "undirected",weighted = "weight")
modularity(gundir, rep(1,length(V(ginit))))
fitDistrPowerLaw<-function(x,xlab='x',ylab='CDF',file='fitDistrPowerLaw.png'){
degpowerlaw = conpl$new(x)
est = estimate_xmin(degpowerlaw,xmax = max(x))
degpowerlaw$setXmin(est)
png(file,width=15,height=15,units='cm',res=300)
plot(degpowerlaw,xlab=xlab,ylab=ylab);lines(degpowerlaw, col=2, lwd=2)
degln = conlnorm$new(x)
est = estimate_xmin(degln)
degln$setXmin(est)
lines(degln, col=3, lwd=2)
text(x=min(x),y=0.005,adj=c(0,0),labels = paste0('Log-normal: mu=',round(degln$pars[1],digits=2),', sigma=',round(degln$pars[2],digits=2),', xmin=',round(degln$xmin,digits=2)),cex=0.6)
text(x=min(x),y=0.003,adj=c(0,0),labels = paste0('Power law: alpha=',round(degpowerlaw$pars[1],digits=2),', xmin=',round(degpowerlaw$xmin,digits=2)),cex=0.6)
dev.off()
return(list(powerlaw=degpowerlaw,ln=degln))
}
library(poweRlaw)
fitDistrPowerLaw<-function(x,xlab='x',ylab='CDF',file='fitDistrPowerLaw.png'){
degpowerlaw = conpl$new(x)
est = estimate_xmin(degpowerlaw,xmax = max(x))
degpowerlaw$setXmin(est)
png(file,width=15,height=15,units='cm',res=300)
plot(degpowerlaw,xlab=xlab,ylab=ylab);lines(degpowerlaw, col=2, lwd=2)
degln = conlnorm$new(x)
est = estimate_xmin(degln)
degln$setXmin(est)
lines(degln, col=3, lwd=2)
text(x=min(x),y=0.005,adj=c(0,0),labels = paste0('Log-normal: mu=',round(degln$pars[1],digits=2),', sigma=',round(degln$pars[2],digits=2),', xmin=',round(degln$xmin,digits=2)),cex=0.6)
text(x=min(x),y=0.003,adj=c(0,0),labels = paste0('Power law: alpha=',round(degpowerlaw$pars[1],digits=2),', xmin=',round(degpowerlaw$xmin,digits=2)),cex=0.6)
dev.off()
return(list(powerlaw=degpowerlaw,ln=degln))
}
fitdeg = fitDistrPowerLaw(strength(ginit)[strength(ginit)>0],'Weighted degree',file=paste0(resdir,'degreeDistrib_ginit.png'))
fitdeg
fitdegfinal = fitDistrPowerLaw(strength(gfinal)[strength(gfinal)>0],'Weighted degree',file=paste0(resdir,'degreeDistrib_gfinal.png'))
resdir
raw <- as.tbl(read.csv(paste0(Sys.getenv('CS_HOME'),'/MobilityEpidemio/Data/FB/Delhi_Tiles_till_2603.csv')))
raw
raw <- as.tbl(read.csv(paste0(Sys.getenv('CS_HOME'),'/MobilityEpidemio/Data/FB/Delhi_Tiles_till_2603.csv'),sep=";"))
raw
resdir = paste0(Sys.getenv('CS_HOME'),'/MobilityEpidemio/Results/MobilityNetwork/Dehli_0225-0326/');dir.create(resdir)
days[1]
spraw[[paste0('X',days[1],'.',hours[1])]]
hours <- c('0000','0800','1600')
spraw[[paste0('X',days[1],'.',hours[1])]]
hours <- c('_0000','_0800','_1600')
spraw[[paste0('X',days[1],hours[1])]]
days[length(days)]
spraw$initflow = spraw[[paste0('X',days[1],hours[1])]] + spraw[[paste0('X',days[1],hours[2])]] + spraw[[paste0('X',days[1],hours[3])]]
spraw$finalflow = spraw[[paste0('X',days[length(days)],hours[1])]] + spraw[[paste0('X',days[length(days)],hours[2])]] + spraw[[paste0('X',days[length(days)],hours[3])]]
alldays = list()
for(currentday in days){
spraw$currentflow = spraw[[paste0('X',currentday,hours[1])]] + spraw[[paste0('X',currentday,hours[2])]] + spraw[[paste0('X',currentday,hours[3])]]
g = graph_from_data_frame(spraw[,c("oid","did","currentflow","distance")])
E(g)$weight = E(g)$currentflow
E(g)$region = ifelse(spraw$oregion==spraw$dregion,spraw$oregion,'Interregion')
#E(g)$region[is.na(E(g)$region)]='Z-International'
alldays[[currentday]]=g
}
raw
days <- paste0('2020.',c(paste0('02.',25:29),paste0('03.0',1:9),paste0('03.',10:26)))
days
area=Dehli
if(area=='France'){
raw <- as.tbl(read.csv(paste0(Sys.getenv('CS_HOME'),'/MobilityEpidemio/Data/FB/France_mobilities_tiles_joined_4march_to_16march2020.csv')))
resdir = paste0(Sys.getenv('CS_HOME'),'/MobilityEpidemio/Results/MobilityNetwork/FR_4-16-03/');dir.create(resdir)
days <- c(paste0('202003',paste0('0',4:9)),paste0('202003',10:16))
hours <- c('_0000','_0800','_1600')
}
area='Dehli'
if(area=='France'){
raw <- as.tbl(read.csv(paste0(Sys.getenv('CS_HOME'),'/MobilityEpidemio/Data/FB/France_mobilities_tiles_joined_4march_to_16march2020.csv')))
resdir = paste0(Sys.getenv('CS_HOME'),'/MobilityEpidemio/Results/MobilityNetwork/FR_4-16-03/');dir.create(resdir)
days <- c(paste0('202003',paste0('0',4:9)),paste0('202003',10:16))
hours <- c('_0000','_0800','_1600')
}
if(area='Dehli'){
raw <- as.tbl(read.csv(paste0(Sys.getenv('CS_HOME'),'/MobilityEpidemio/Data/FB/Delhi_Tiles_till_2603.csv'),sep=";"))
resdir = paste0(Sys.getenv('CS_HOME'),'/MobilityEpidemio/Results/MobilityNetwork/Dehli_0225-0326/');dir.create(resdir)
days <- paste0('2020.',c(paste0('02.',25:29),paste0('03.0',1:9),paste0('03.',10:26)))
hours <- c('.0530','.1330','.2130')
}
if(area=='France'){
raw <- as.tbl(read.csv(paste0(Sys.getenv('CS_HOME'),'/MobilityEpidemio/Data/FB/France_mobilities_tiles_joined_4march_to_16march2020.csv')))
resdir = paste0(Sys.getenv('CS_HOME'),'/MobilityEpidemio/Results/MobilityNetwork/FR_4-16-03/');dir.create(resdir)
days <- c(paste0('202003',paste0('0',4:9)),paste0('202003',10:16))
hours <- c('_0000','_0800','_1600')
}
if(area='Dehli'){
raw <- as.tbl(read.csv(paste0(Sys.getenv('CS_HOME'),'/MobilityEpidemio/Data/FB/Delhi_Tiles_till_2603.csv'),sep=";"))
resdir = paste0(Sys.getenv('CS_HOME'),'/MobilityEpidemio/Results/MobilityNetwork/Dehli_0225-0326/');dir.create(resdir)
days <- paste0('2020.',c(paste0('02.',25:29),paste0('03.0',1:9),paste0('03.',10:26)))
hours <- c('.0530','.1330','.2130')
}
if(area=='Dehli'){
raw <- as.tbl(read.csv(paste0(Sys.getenv('CS_HOME'),'/MobilityEpidemio/Data/FB/Delhi_Tiles_till_2603.csv'),sep=";"))
resdir = paste0(Sys.getenv('CS_HOME'),'/MobilityEpidemio/Results/MobilityNetwork/Dehli_0225-0326/');dir.create(resdir)
days <- paste0('2020.',c(paste0('02.',25:29),paste0('03.0',1:9),paste0('03.',10:26)))
hours <- c('.0530','.1330','.2130')
}
hours
days
spraw = st_as_sf(raw,wkt = 'Geometry')
st_crs(spraw)<-4326
rawcoords = unlist(spraw[,"Geometry"])
spraw$oid = paste0(rawcoords[seq(1,length(rawcoords),4)],rawcoords[seq(3,length(rawcoords),4)])
spraw$did = paste0(rawcoords[seq(2,length(rawcoords),4)],rawcoords[seq(4,length(rawcoords),4)])
coords = as.data.frame(st_coordinates(spraw))
wktpoints = paste0("POINT(",coords$X," ",coords$Y,")")
opoints = st_as_sf(data.frame(geometry=wktpoints[seq(1,length(wktpoints),2)]),wkt='geometry')
st_crs(opoints)<-4326
dpoints = st_as_sf(data.frame(geometry=wktpoints[seq(2,length(wktpoints),2)]),wkt='geometry')
st_crs(dpoints)<-4326
dist = st_distance(opoints,dpoints,by_element = T,tolerance=100)
spraw$distance = as.numeric(dist)/1000
area='Delhi'
getwd()
setwd(paste0(Sys.getenv('CS_HOME'),'/MobilityEpidemio/Models/MobilityNetwork'))
names(regions)
names(regions)[1]<-'name'
regions
regions <- st_transform(st_read('data/Delhi/','Districts'),st_crs(spraw))
regions
names(regions)
names(regions)[2]<-'name'
if(area=='Delhi'){
regions <- st_transform(st_read('data/Delhi/','Districts'),st_crs(spraw))
names(regions)[2]<-'name'
}
spraw$oregion = as.character(st_join(opoints,y = regions, join=st_within)[['name']])
spraw$dregion = as.character(st_join(dpoints,y = regions, join=st_within)[['name']])
spraw = spraw[!is.na(spraw$oregion)&!is.na(spraw$dregion),]
spraw$initflow = spraw[[paste0('X',days[1],hours[1])]] + spraw[[paste0('X',days[1],hours[2])]] + spraw[[paste0('X',days[1],hours[3])]]
spraw$finalflow = spraw[[paste0('X',days[length(days)],hours[1])]] + spraw[[paste0('X',days[length(days)],hours[2])]] + spraw[[paste0('X',days[length(days)],hours[3])]]
ginit = graph_from_data_frame(spraw[,c("oid","did","initflow")])
E(ginit)$weight = E(ginit)$initflow
gfinal = graph_from_data_frame(spraw[,c("oid","did","finalflow")])
E(gfinal)$weight = E(gfinal)$finalflow
alldays = list()
for(currentday in days){
spraw$currentflow = spraw[[paste0('X',currentday,hours[1])]] + spraw[[paste0('X',currentday,hours[2])]] + spraw[[paste0('X',currentday,hours[3])]]
g = graph_from_data_frame(spraw[,c("oid","did","currentflow","distance")])
E(g)$weight = E(g)$currentflow
E(g)$region = ifelse(spraw$oregion==spraw$dregion,spraw$oregion,'Interregion')
#E(g)$region[is.na(E(g)$region)]='Z-International'
alldays[[currentday]]=g
}
sum(E(ginit)$weight)
sum(E(gfinal)$weight)
ggplot(data.frame(
totalflow = sapply(alldays,function(g){sum(E(g)$weight)}),
day = ymd(days)
),
aes(x=day,y=totalflow)
)+geom_point()+geom_line()+xlab('Day')+ylab('Total flow')+stdtheme
ggsave(file=paste0(resdir,'allflows.png'),width=15,height=10,units='cm')
regflows = lapply(alldays,function(g){
as.tbl(data.frame(flow = E(g)$weight,
region=as.character(E(g)$region),
distance=E(g)$distance
))%>%
group_by(region)%>%summarize(avgdist=sum(flow*distance)/sum(flow),flow=sum(flow))
})
ggplot(data.frame(
totalflow = unlist(lapply(regflows,function(d){d$flow})),
region =  unlist(lapply(regflows,function(d){d$region})),
day = ymd(unlist(lapply(names(regflows),function(d){rep(d,nrow(regflows[[1]]))})))
),
aes(x=day,y=totalflow,color=region,group=region)
)+geom_point()+geom_line()+xlab('Day')+ylab('Total flow')+stdtheme
ggsave(file=paste0(resdir,'allflows_regions.png'),width=35,height=20,units='cm')
ggplot(data.frame(strength = strength(ginit)),aes(x=strength))+geom_histogram()+scale_x_log10()+xlab('Weighted degree')+ylab('Count')+stdtheme
ggsave(filename = paste0(resdir,'strength_initnw.png'),width=15,height=10,units='cm')
ggplot(data.frame(strength = strength(gfinal)),aes(x=strength))+geom_histogram()+scale_x_log10()+xlab('Weighted degree')+ylab('Count')+stdtheme
ggsave(filename = paste0(resdir,'strength_finalnw.png'),width=15,height=10,units='cm')
sum(spraw$distance*spraw$initflow/sum(spraw$initflow))
sum(spraw$distance*spraw$finalflow/sum(spraw$finalflow))
ggplot(data.frame(avgdist = sapply(alldays,function(g){sum(E(g)$distance*E(g)$weight/sum(E(g)$weight))}),day = ymd(days)),
aes(x=day,y=avgdist))+geom_point()+geom_line()+xlab('Day')+ylab('Average travelled distance')+stdtheme
ggsave(file=paste0(resdir,'avgdist.png'),width=20,height=15,units='cm')
ddist = data.frame(
avgdist = unlist(lapply(regflows,function(d){d$avgdist})),
region =  unlist(lapply(regflows,function(d){d$region})),
day = ymd(unlist(lapply(names(regflows),function(d){rep(d,nrow(regflows[[1]]))})))
)
ggplot(ddist,aes(x=day,y=avgdist,color=region,group=region))+geom_point()+geom_line()+xlab('Day')+ylab('Average travelled distance')+stdtheme
ggsave(file=paste0(resdir,'avgdist_regions.png'),width=35,height=20,units='cm')
ggplot(ddist[ddist$region!='Interregion',],aes(x=day,y=avgdist,color=region,group=region))+geom_point()+geom_line()+xlab('Day')+ylab('Average travelled distance')+stdtheme
ggsave(file=paste0(resdir,'avgdist_regions_without_inter.png'),width=35,height=20,units='cm')
strengthHierarchy <- function(g){
x = strength(g)
x = x[x>0]
return(lm(data = data.frame(rank=log(1:length(x)),strength = sort(log(x),decreasing = T)))$coefficients[2])
}
ggplot(data.frame(hierarchy = sapply(alldays,strengthHierarchy),day = ymd(days)),aes(x=day,y=hierarchy))+
geom_point()+geom_line()+xlab('Day')+ylab('Strength hierarchy')+stdtheme
ggsave(file=paste0(resdir,'strengthhierarchy.png'),width=15,height=10,units='cm')
clusterModularity <- function(g,clusterFunction){
A = as_adjacency_matrix(g,attr = "weight")
M = (A+t(A))/2
gundir= graph_from_adjacency_matrix(M,mode = "undirected",weighted = "weight")
clusters =clusterFunction(gundir)
return(modularity(gundir, clusters$membership))
}
clusterModularity(ginit,cluster_fast_greedy)
clusterModularity(gfinal,cluster_fast_greedy)
ggplot(data.frame(modularity = sapply(alldays,function(g){clusterModularity(g,cluster_fast_greedy)}),day = ymd(days)),aes(x=day,y=modularity))+
geom_point()+geom_line()+xlab('Day')+ylab('Modularity')+stdtheme
ggsave(file=paste0(resdir,'modularity.png'),width=15,height=10,units='cm')
library(poweRlaw)
fitDistrPowerLaw<-function(x,xlab='x',ylab='CDF',file='fitDistrPowerLaw.png'){
degpowerlaw = conpl$new(x)
est = estimate_xmin(degpowerlaw,xmax = max(x))
degpowerlaw$setXmin(est)
png(file,width=15,height=15,units='cm',res=300)
plot(degpowerlaw,xlab=xlab,ylab=ylab);lines(degpowerlaw, col=2, lwd=2)
degln = conlnorm$new(x)
est = estimate_xmin(degln)
degln$setXmin(est)
lines(degln, col=3, lwd=2)
text(x=min(x),y=0.005,adj=c(0,0),labels = paste0('Log-normal: mu=',round(degln$pars[1],digits=2),', sigma=',round(degln$pars[2],digits=2),', xmin=',round(degln$xmin,digits=2)),cex=0.6)
text(x=min(x),y=0.003,adj=c(0,0),labels = paste0('Power law: alpha=',round(degpowerlaw$pars[1],digits=2),', xmin=',round(degpowerlaw$xmin,digits=2)),cex=0.6)
dev.off()
return(list(powerlaw=degpowerlaw,ln=degln))
}
fitdeginit = fitDistrPowerLaw(strength(ginit)[strength(ginit)>0],'Weighted degree',file=paste0(resdir,'degreeDistrib_ginit.png'))
fitdegfinal = fitDistrPowerLaw(strength(gfinal)[strength(gfinal)>0],'Weighted degree',file=paste0(resdir,'degreeDistrib_gfinal.png'))
fitDistrPowerLaw<-function(x,xlab='x',ylab='CDF',file='fitDistrPowerLaw.png'){
degpowerlaw = conpl$new(x)
est = estimate_xmin(degpowerlaw,xmax = max(x))
degpowerlaw$setXmin(est)
png(file,width=15,height=15,units='cm',res=300)
plot(degpowerlaw,xlab=xlab,ylab=ylab);lines(degpowerlaw, col=2, lwd=2)
degln = conlnorm$new(x)
est = estimate_xmin(degln)
degln$setXmin(est)
lines(degln, col=3, lwd=2)
text(x=min(x),y=0.007,adj=c(0,0),labels = paste0('Log-normal: mu=',round(degln$pars[1],digits=2),', sigma=',round(degln$pars[2],digits=2),', xmin=',round(degln$xmin,digits=2)),cex=0.6)
text(x=min(x),y=0.005,adj=c(0,0),labels = paste0('Power law: alpha=',round(degpowerlaw$pars[1],digits=2),', xmin=',round(degpowerlaw$xmin,digits=2)),cex=0.6)
dev.off()
return(list(powerlaw=degpowerlaw,ln=degln))
}
fitdeginit = fitDistrPowerLaw(strength(ginit)[strength(ginit)>0],'Weighted degree',file=paste0(resdir,'degreeDistrib_ginit.png'))
fitdegfinal = fitDistrPowerLaw(strength(gfinal)[strength(gfinal)>0],'Weighted degree',file=paste0(resdir,'degreeDistrib_gfinal.png'))
